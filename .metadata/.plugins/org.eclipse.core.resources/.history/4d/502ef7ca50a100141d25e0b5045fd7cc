/**
 * 
 */
package com.mobileclient.activity;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.content.IntentSender.SendIntentException;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesClient.ConnectionCallbacks;
import com.google.android.gms.common.GooglePlayServicesClient.OnConnectionFailedListener;
import com.google.android.gms.common.SignInButton;
import com.google.android.gms.plus.PlusClient;
import com.google.android.gms.plus.model.people.Person;

/**
 * @author zl
 * 
 */
public class GooglePlusActivity extends Activity implements
		View.OnClickListener, ConnectionCallbacks, OnConnectionFailedListener {
	
	private static final String TAG = "GooglePlusActivity";
	
    private static final int REQUEST_CODE_RESOLVE_ERR = 9000;

    private ProgressDialog mConnectionProgressDialog;
    
    private PlusClient mPlusClient;
    
    private ConnectionResult mConnectionResult;
    
    
    private SignInButton mSignInButton;
    
    private Button btnSignOut, btnRevokeAccess;
    private ImageView imgProfilePic;
    private TextView txtName, txtEmail;
    private LinearLayout llProfileLayout;
	
    
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.google_plus);
//        mPlusClient = new PlusClient.Builder(this, this, this)
//        		.setVisibleActivities("http://schemas.google.com/AddActivity", "http://schemas.google.com/BuyActivity")
//                .build();
        // 参考地址:http://stackoverflow.com/questions/19887187/setvisibleactivities-undefined
        
        
        mPlusClient = new PlusClient.Builder(this, this, this)
        .setActions(MomentUtil.ACTIONS)
        .build();
        
        // 在未解决连接故障时，显示进度条。
        mConnectionProgressDialog = new ProgressDialog(this);
        mConnectionProgressDialog.setMessage("Signing in...");
        
        mSignInButton = (SignInButton)findViewById(R.id.sign_in_button);
        mSignInButton.setOnClickListener(this);
        
        btnSignOut = (Button) findViewById(R.id.btn_sign_out);
        btnRevokeAccess = (Button) findViewById(R.id.btn_revoke_access);
        imgProfilePic = (ImageView) findViewById(R.id.imgProfilePic);
        txtName = (TextView) findViewById(R.id.txtName);
        txtEmail = (TextView) findViewById(R.id.txtEmail);
        llProfileLayout = (LinearLayout) findViewById(R.id.llProfile);
 
        // Button click listeners
        btnSignOut.setOnClickListener(this);
        btnRevokeAccess.setOnClickListener(this);
    }
    
    
    @Override
    protected void onStart() {
        super.onStart();
        Log.d(TAG, "准备连接..");
        mPlusClient.connect();        
    }

    @Override
    protected void onStop() {
        super.onStop();
        mPlusClient.disconnect();
        Log.d(TAG, "断开连接..");
    }

	@Override
	public void onConnectionFailed(ConnectionResult result) {
		Log.d(TAG, "未连接..onConnectionFailed -->"+result.hasResolution());
		if (result.hasResolution()) {
            try {
            	Log.d(TAG, "未连接..错误码: -->"+REQUEST_CODE_RESOLVE_ERR);
                result.startResolutionForResult(this, REQUEST_CODE_RESOLVE_ERR);
            } catch (SendIntentException e) {
                mPlusClient.connect();
            }
        }
        // 在用户点击时保存结果并解决连接故障。
        mConnectionResult = result;
	}
	
	@Override
    protected void onActivityResult(int requestCode, int responseCode, Intent intent) {
        if (requestCode == REQUEST_CODE_RESOLVE_ERR && responseCode == RESULT_OK) {
            mConnectionResult = null;
            mPlusClient.connect();
        }
    }

	@Override
	public void onConnected(Bundle arg0) {
		//用户登录成功之后，调用
		mConnectionProgressDialog.dismiss();
		//当前账户
    	Person currentPerson = mPlusClient.getCurrentPerson();
    	String account = mPlusClient.getAccountName();
    	String accountName = currentPerson.getDisplayName();
    	String location = currentPerson.getCurrentLocation();
 		Log.i(TAG, accountName+"is connected.");
 		Toast.makeText(GooglePlusActivity.this, "account:"+account+";\naccountName:"+accountName+";\nlocation:"+location,
				Toast.LENGTH_SHORT).show();
	}

	@Override
	public void onDisconnected() {
		Log.d(TAG, "未连接..disconnected");
	}

//	@Override
	public void onClick(View view) {
		
		
		switch (view.getId()) {
        case R.id.sign_in_button:
            // Signin button clicked
        	if (!mPlusClient.isConnected()) {
    			Log.i(TAG, "点击登录按钮...未连接");
    	        if (mConnectionResult == null) {
    	            mConnectionProgressDialog.show();
    	        } else {
    	            try {
    	            	Log.i(TAG, "未连接，开始解决方案...");
    	                mConnectionResult.startResolutionForResult(this, REQUEST_CODE_RESOLVE_ERR);
    	                Log.i(TAG, ""+mConnectionResult.getResolution());
    	               
    	            } catch (SendIntentException e) {
    	            	Log.i(TAG, "未连接，重新尝试连接...");
    	                // 重新尝试连接。
    	                mConnectionResult = null;
    	                mPlusClient.connect();
    	            }
    	        }
    	    }else{
    	    	//当前账户
    	    	Person currentPerson = mPlusClient.getCurrentPerson();
    	    	String account = mPlusClient.getAccountName();
    	    	String accountName = currentPerson.getDisplayName();
    	    	String location = currentPerson.getCurrentLocation();
         		Log.i(TAG, accountName+"is connected.");
         		Toast.makeText(GooglePlusActivity.this, "account:"+account+";\naccountName:"+accountName+";\nlocation:"+location,
    					Toast.LENGTH_SHORT).show();
    	    }
            break;
        case R.id.btn_sign_out:
            // Signout button clicked
            signOutFromGplus();
            break;
        case R.id.btn_revoke_access:
            // Revoke access button clicked
            revokeGplusAccess();
            break;
        }
	}

}
