package com.mobileclient.activity;

import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.ParseException;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
import org.apache.http.util.EntityUtils;
import org.json.JSONObject;

import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.Signature;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Bundle;
import android.support.v7.app.ActionBarActivity;
import android.util.Base64;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;


import com.facebook.Session;
import com.facebook.SessionState;
import com.facebook.UiLifecycleHelper;
import com.facebook.model.GraphUser;
import com.facebook.widget.LoginButton;
import com.mobileclient.utils.RandomUtil;

/**
 * 主页面
 * 
 * @author fuzl
 * 
 */
public class MainActivity extends ActionBarActivity {
	
	
	private static final String TAG = "MainActivity";

	/**
	 * 登陆按钮
	 */
	private Button loginBtn = null;
	/**
	 * facebook登陆按钮
	 */
	private Button fbLoginBtn = null;
	
	/**
	 * google+
	 */
	private Button googlePlusButton = null;
	/**
	 * 用户名
	 */
	private EditText userName = null;
	/**
	 * 密码
	 */
	private EditText password = null;
	/**
	 * 随机数
	 */
	private String rand = null;

	/**
	 * facebook参数
	 */
	private UiLifecycleHelper uiHelper;
	private GraphUser user;

	private Session.StatusCallback callback = new Session.StatusCallback() {
		@Override
		public void call(Session session, SessionState state,
				Exception exception) {
			 onSessionStateChange(session, state, exception);
		}
	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		// 获得登陆按钮，账户,密码
		loginBtn = (Button) findViewById(R.id.signin_button);
		fbLoginBtn = (Button) findViewById(R.id.fb_button);
		userName = (EditText) findViewById(R.id.username_edit);
		password = (EditText) findViewById(R.id.password_edit);
		
		googlePlusButton= (Button) findViewById(R.id.google_plus_button);

		// 登陆实现
		loginBtn.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				Toast.makeText(MainActivity.this, "登陆中...", Toast.LENGTH_LONG)
						.show();
				/**
				 * 打印哈希值
				 */
				try {
					PackageInfo info = getPackageManager().getPackageInfo(
							"com.mobileclient.activity", PackageManager.GET_SIGNATURES);
					for (Signature signature : info.signatures) {
						MessageDigest md = MessageDigest.getInstance("SHA");
						md.update(signature.toByteArray());
						Log.i("KeyHash:",
								Base64.encodeToString(md.digest(), Base64.DEFAULT));
					}
				} catch (NameNotFoundException e) {

				} catch (NoSuchAlgorithmException e) {

				}
				// 校验参数
				if (!checkEdit()) {
					return;
				}

				
		});
		
		googlePlusButton.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				Log.i("GoogleApiActivity","准备跳转GoogleApiActivity...");
				Intent intent = new Intent(MainActivity.this,
						GoogleApiActivity.class);
				startActivity(intent);
				finish();// 关闭自己
			}
		});

		/**
		 * facebook跳转按钮
		 */
		 fbLoginBtn.setOnClickListener(new OnClickListener() {
		
		 @Override
		 public void onClick(View arg0) {
			 	Log.i("FacebookActivity","准备跳转FacebookActivity...");
				Intent intent = new Intent(MainActivity.this,
						FacebookActivity.class);
				startActivity(intent);
				finish();// 关闭自己
//			 	//fbLoginBtn.setTextColor(Color.TRANSPARENT);
//				fbLoginBtn.setCompoundDrawablesWithIntrinsicBounds(0, 0, 0, 0);
//				// fbLoginBtn.setBackgroundResource(R.drawable.login_fb);
//
//				fbLoginBtn.setUserInfoChangedCallback(new LoginButton.UserInfoChangedCallback() {
//							@Override
//							public void onUserInfoFetched(GraphUser user) {
//								//uiHelper = new UiLifecycleHelper(this, callback); // 这个是回调用的辅助工具可以在这个callback上做一些处理
//								MainActivity.this.user = user;
//								
//								updateUI();
//							}
//						});
				}
		 });

		

	}

	// private void onSessionStateChange(Session session, SessionState state,
	// Exception exception) {
	// if (pendingAction != PendingAction.NONE &&
	// (exception instanceof FacebookOperationCanceledException ||
	// exception instanceof FacebookAuthorizationException)) {
	// new AlertDialog.Builder(MainActivity.this)
	// .setTitle(R.string.cancelled)
	// .setMessage(R.string.permission_not_granted)
	// .setPositiveButton(R.string.ok, null)
	// .show();
	// pendingAction = PendingAction.NONE;
	// } else if (state == SessionState.OPENED_TOKEN_UPDATED) {
	// handlePendingAction();
	// }
	// updateUI();
	// }

	protected void onSessionStateChange(Session session, SessionState state,
			Exception exception) {
		boolean enableButtons = (session != null && session.isOpened());
		if (enableButtons && user != null) {
			// 在这里可以获取到用Facebook登录的用户user，通过user.getXX可以获取到你想要的信息。
			// 也就是在使用Facebook登录后的一些跳转处理
			Log.i(TAG, user.getFirstName());
			Toast.makeText(MainActivity.this, "FirstName:"+user.getFirstName()+"userName:"+user.getUsername()+",email:"+user.getProperty("email"),
					Toast.LENGTH_SHORT).show();
		}
	}

	private void updateUI() {
		Session session = Session.getActiveSession();
		boolean enableButtons = (session != null && session.isOpened());

		if (enableButtons && user != null) {
			// 在这里可以获取到用Facebook登录的用户user，通过user.getXX可以获取到你想要的信息。
			// 也就是在使用Facebook登录后的一些跳转处理
			Log.i(TAG, user.getFirstName());
			Toast.makeText(MainActivity.this, "FirstName:"+user.getFirstName()+"userName:"+user.getUsername()+",email:"+user.getProperty("email"),
					Toast.LENGTH_SHORT).show();
		}
	}

	/**
	 * 校验用户名 密码输入
	 * 
	 * @return
	 */
	private boolean checkEdit() {
		if (userName.getText().toString().trim().equals("")) {
			Toast.makeText(MainActivity.this, "用户名不能为空", Toast.LENGTH_SHORT)
					.show();
		} else if (password.getText().toString().trim().equals("")) {
			Toast.makeText(MainActivity.this, "密码不能为空", Toast.LENGTH_SHORT)
					.show();
		} else {
			return true;
		}
		return false;
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}

//	@Override
//	protected void onResume() {
//		super.onResume();
//		uiHelper.onResume();
//
//		// Call the 'activateApp' method to log an app event for use in
//		// analytics and advertising reporting. Do so in
//		// the onResume methods of the primary Activities that an app may be
//		// launched into.
//		AppEventsLogger.activateApp(this);
//
//		updateUI();
//	}
//
//	@Override
//	public void onPause() {
//		super.onPause();
//		uiHelper.onPause();
//
//		// Call the 'deactivateApp' method to log an app event for use in
//		// analytics and advertising
//		// reporting. Do so in the onPause methods of the primary Activities
//		// that an app may be launched into.
//		AppEventsLogger.deactivateApp(this);
//	}
//
//	@Override
//	public void onDestroy() {
//		super.onDestroy();
//		uiHelper.onDestroy();
//	}
}
